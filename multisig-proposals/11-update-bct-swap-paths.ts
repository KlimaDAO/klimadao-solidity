import SafeApiKit from "@safe-global/api-kit";
import Safe from "@safe-global/protocol-kit";
import {
  MetaTransactionData,
  OperationType,
} from "@safe-global/safe-core-sdk-types";

const RPC_URL = process.env.POLYGON_URL;
const SAFE_ADDRESS = process.env.CONTRACT_MULTISIG;
const OWNER_1_PRIVATE_KEY = process.env.PRIVATE_KEY;
const OWNER_1_ADDRESS = process.env.PUBLIC_KEY;
const RETIREMENT_AGGREGATOR = process.env.INFINITY_ADDRESS;
const SAFE_KIT_API_KEY = process.env.SAFE_KIT_API_KEY

// Sepolia for testing
const apiKit = new SafeApiKit({
  chainId: 137n,
  apiKey: SAFE_KIT_API_KEY
});

if (
  !RPC_URL ||
  !OWNER_1_PRIVATE_KEY ||
  !OWNER_1_ADDRESS ||
  !SAFE_ADDRESS ||
  !RETIREMENT_AGGREGATOR
) {
  throw new Error("Missing environment variables");
}

const protocolKitOwner1 = await Safe.init({
  provider: RPC_URL,
  signer: OWNER_1_PRIVATE_KEY,
  safeAddress: SAFE_ADDRESS,
});

// Create both upgrade transactions
const transactions: MetaTransactionData[] = [
  {
    to: RETIREMENT_AGGREGATOR,
    value: "0",
    // swap paths calldata generated by upgrade script
    data: "0x1f931c1c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000003acc38c6f8c446008ec0153c345310494c6da544000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004e1c7392a00000000000000000000000000000000000000000000000000000000",
    operation: OperationType.Call,
  },
  {
    to: RETIREMENT_AGGREGATOR,
    value: "0",
    // facet replacement calldata (RetirementQuoter, RetireCarbonFacet, RetireSourceFacet, RedeemToucanPoolFacet, RedeemC3PoolFacet) from upgrade script
    data: "0x1f931c1c000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000580000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000002c000000000000000000000000000000000000000000000000000000000000003800000000000000000000000000000000000000000000000000000000000000440000000000000000000000000a5502e9b37fadd540ee40bfa2167ea4a073267040000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000078298360e0000000000000000000000000000000000000000000000000000000058bdb8e800000000000000000000000000000000000000000000000000000000f826247300000000000000000000000000000000000000000000000000000000f0ff264c00000000000000000000000000000000000000000000000000000000169507750000000000000000000000000000000000000000000000000000000079f5e053000000000000000000000000000000000000000000000000000000007eed24a20000000000000000000000000000000000000000000000000000000000000000000000000000000086b631a6186b35f068fb149b6c5f78cdcd2321ce0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000021c79d29a000000000000000000000000000000000000000000000000000000002eb3eb0a0000000000000000000000000000000000000000000000000000000000000000000000000000000078ee267e3c59436632ddcb835cad70df0134ecb0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002df726cfe00000000000000000000000000000000000000000000000000000000c8b9467e000000000000000000000000000000000000000000000000000000000000000000000000000000001269aa8ddeba26c4acc9402d849028eec09e11770000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000029ba61b13000000000000000000000000000000000000000000000000000000007af2e72800000000000000000000000000000000000000000000000000000000000000000000000000000000bc9f082ea38bef243cdc05d03dafa8b8f5ed4405000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000002ee2342a000000000000000000000000000000000000000000000000000000000a8c7b636000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    operation: OperationType.Call,
  },
];

const nextNonce = await apiKit.getNextNonce(SAFE_ADDRESS);

const safeTransaction = await protocolKitOwner1.createTransaction({
  transactions,
  options: {
    nonce: nextNonce,
  },
});

const safeTxHash = await protocolKitOwner1.getTransactionHash(safeTransaction);
const signature = await protocolKitOwner1.signHash(safeTxHash);

// Propose transaction to the service
await apiKit.proposeTransaction({
  safeAddress: SAFE_ADDRESS,
  safeTransactionData: safeTransaction.data,
  safeTxHash,
  senderAddress: OWNER_1_ADDRESS,
  senderSignature: signature.data,
});

console.log("Proposal successful.")